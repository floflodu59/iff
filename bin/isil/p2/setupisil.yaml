- name: Config VM with apps
  hosts: myhosts
  gather_facts: yes
  become: no

  tasks:
    - name: Install Growroot
      apt: name=cloud-initramfs-growroot state=present update_cache=true

    - name: Resize filesystem - Step 1
      ansible.builtin.command:
        cmd: growpart /dev/vda 1

    - name: Resize filesystem - Step 2
      ansible.builtin.command:
        cmd: resize2fs /dev/vda1

#    - name: Install cockpit
#      apt: name=cockpit state=latest update_cache=true

    - name: Install Cockpit
      ansible.builtin.apt:
        name: cockpit
        state: latest
        default_release: jammy-backports
        update_cache: true

    - name: Install cockpit
      apt: name=cockpit-pcp state=latest update_cache=true

    - name: Download IFF repository into SRV
      ansible.builtin.command:
        cmd: git clone https://github.com/floflodu59/iff.git /srv/iff

    - name: Create cockpit folder
      ansible.builtin.command:
        cmd: mkdir /usr/local/share/cockpit

    - name: Create cockpit-files folder
      ansible.builtin.command:
        cmd: mkdir /usr/local/share/cockpit/cockpit-files

    - name: Install cockpit-files
      ansible.builtin.command:
        cmd: cp /srv/iff/bin/cockpit-files/* /usr/local/share/cockpit/cockpit-files/

    - name: Sed start_isil.sh
      ansible.builtin.command:
        cmd: echo "Rien Ã  voir ici, circulez."

    - name: Create log folder
      ansible.builtin.command:
        cmd: mkdir -p /var/log/isil

    - name: Set ownership
      ansible.builtin.command:
        cmd: chown root:root /var/log/isil

    - name: Set permissions
      ansible.builtin.command:
        cmd: sudo chmod 755 /var/log/isil

    - name: Create ISIL startup command
      ansible.builtin.command:
        cmd: cp /srv/iff/bin/isil/p1/start_isil.sh /usr/local/bin/

    - name: Create ISIL service
      ansible.builtin.command:
        cmd: cp /srv/iff/bin/isil/p1/isil.service /etc/systemd/system/

    - name: Install Java
      apt: name=default-jre state=present update_cache=true

    - name: Curl
      ansible.builtin.command:
        cmd: curl -fsSL https://deb.nodesource.com/setup_14.x

    - name: Install NodeJs
      apt: name=nodejs state=present update_cache=true

    - name: Install Apache2
      apt: name=apache2 state=present update_cache=true

#    - name: Enable and start Apache2
#      ansible.builtin.command:
#        cmd: systemctl enable apache2.service && systemctl start apache2.service

    - name: Install Php
      apt:
        name:
            - php8.1
            - php8.1-cli
            - php8.1-common
            - php8.1-imap
            - php8.1-redis
            - php8.1-snmp
            - php8.1-xml
            - php8.1-zip
            - php8.1-mbstring
            - php8.1-curl
            - libapache2-mod-php
            - php8.1-mysql
        state: present
        update_cache: true

#    - name: Install PostgreSQL
#      apt:
#        name:
#        - postgresql
#        - postgresql-client
#        state: present
#        update_cache: true
#
#    - name: Enable and start Postresql
#      ansible.builtin.command:
#        cmd: systemctl enable postgresql && systemctl start postgresql
#
#    - name: Enable and start Apache2
#      ansible.builtin.command:
#        cmd: systemctl enable apache2 && systemctl start apache2
#
#    - name: Configure PostgreSQL Authentication
#      ansible.builtin.command:
#        cmd: sed -i 's/local   all             postgres                                peer/local   all             postgres                                trust/g' /etc/postgresql/14/main/pg_hba.conf
#
#    - name: Restart PostgreSQL
#      ansible.builtin.command:
#        cmd: systemctl restart postgresql
#
#    - name: Configure PostgreSQL
#      ansible.builtin.command:
#        cmd: psql -U postgres -c "Alter USER postgres WITH PASSWORD 'PASSWORD';"
#
#    - name: Create ISIL Database
#      ansible.builtin.command:
#        cmd: psql -U postgres -c "create database isil;"
#
#    - name: Configure PostgreSQL Authentication
#      ansible.builtin.command:
#        cmd: sed -i 's/local   all             postgres                                trust/local   all             postgres                                md5/g' /etc/postgresql/14/main/pg_hba.conf#
#
    - name: Install certbot
      apt:
        name:
        - certbot
        - python3-certbot-apache

#    - name: Certifiy apache
#      ansible.builtin.command:
#        cmd: certbot -apache
